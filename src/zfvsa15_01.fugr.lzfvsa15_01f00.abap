*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZVSA1503........................................*
FORM GET_DATA_ZVSA1503.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA1501 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA1503 .
ZVSA1503-MANDT =
ZTSA1501-MANDT .
ZVSA1503-PERNR =
ZTSA1501-PERNR .
ZVSA1503-ENAME =
ZTSA1501-ENAME .
ZVSA1503-ENTDT =
ZTSA1501-ENTDT .
ZVSA1503-GENDER =
ZTSA1501-GENDER .
ZVSA1503-DEPID =
ZTSA1501-DEPID .
<VIM_TOTAL_STRUC> = ZVSA1503.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA1503 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA1503.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA1503-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1501 WHERE
  PERNR = ZVSA1503-PERNR .
    IF SY-SUBRC = 0.
    DELETE ZTSA1501 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1501 WHERE
  PERNR = ZVSA1503-PERNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA1501.
    ENDIF.
ZTSA1501-MANDT =
ZVSA1503-MANDT .
ZTSA1501-PERNR =
ZVSA1503-PERNR .
ZTSA1501-ENAME =
ZVSA1503-ENAME .
ZTSA1501-ENTDT =
ZVSA1503-ENTDT .
ZTSA1501-GENDER =
ZVSA1503-GENDER .
ZTSA1501-DEPID =
ZVSA1503-DEPID .
    IF SY-SUBRC = 0.
    UPDATE ZTSA1501 ##WARN_OK.
    ELSE.
    INSERT ZTSA1501 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA1503-UPD_FLAG,
STATUS_ZVSA1503-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA1503.
  SELECT SINGLE * FROM ZTSA1501 WHERE
PERNR = ZVSA1503-PERNR .
ZVSA1503-MANDT =
ZTSA1501-MANDT .
ZVSA1503-PERNR =
ZTSA1501-PERNR .
ZVSA1503-ENAME =
ZTSA1501-ENAME .
ZVSA1503-ENTDT =
ZTSA1501-ENTDT .
ZVSA1503-GENDER =
ZTSA1501-GENDER .
ZVSA1503-DEPID =
ZTSA1501-DEPID .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA1503 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA1503-PERNR TO
ZTSA1501-PERNR .
MOVE ZVSA1503-MANDT TO
ZTSA1501-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA1501'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA1501 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA1501'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA1504........................................*
FORM GET_DATA_ZVSA1504.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA1503 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA1504 .
ZVSA1504-MANDT =
ZTSA1503-MANDT .
ZVSA1504-DEPID =
ZTSA1503-DEPID .
ZVSA1504-PHONE =
ZTSA1503-PHONE .
    SELECT SINGLE * FROM ZTSA1503_T WHERE
DEPID = ZTSA1503-DEPID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA1504-DTEXT =
ZTSA1503_T-DTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA1504.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA1504 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA1504.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA1504-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1503 WHERE
  DEPID = ZVSA1504-DEPID .
    IF SY-SUBRC = 0.
    DELETE ZTSA1503 .
    ENDIF.
    DELETE FROM ZTSA1503_T WHERE
    DEPID = ZTSA1503-DEPID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1503 WHERE
  DEPID = ZVSA1504-DEPID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA1503.
    ENDIF.
ZTSA1503-MANDT =
ZVSA1504-MANDT .
ZTSA1503-DEPID =
ZVSA1504-DEPID .
ZTSA1503-PHONE =
ZVSA1504-PHONE .
    IF SY-SUBRC = 0.
    UPDATE ZTSA1503 ##WARN_OK.
    ELSE.
    INSERT ZTSA1503 .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA1503_T WHERE
    DEPID = ZTSA1503-DEPID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA1503_T.
ZTSA1503_T-DEPID =
ZTSA1503-DEPID .
ZTSA1503_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA1503_T-DTEXT =
ZVSA1504-DTEXT .
    IF SY-SUBRC = 0.
    UPDATE ZTSA1503_T ##WARN_OK.
    ELSE.
    INSERT ZTSA1503_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA1504-UPD_FLAG,
STATUS_ZVSA1504-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA1504.
  SELECT SINGLE * FROM ZTSA1503 WHERE
DEPID = ZVSA1504-DEPID .
ZVSA1504-MANDT =
ZTSA1503-MANDT .
ZVSA1504-DEPID =
ZTSA1503-DEPID .
ZVSA1504-PHONE =
ZTSA1503-PHONE .
    SELECT SINGLE * FROM ZTSA1503_T WHERE
DEPID = ZTSA1503-DEPID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA1504-DTEXT =
ZTSA1503_T-DTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA1504-DTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA1504 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA1504-DEPID TO
ZTSA1503-DEPID .
MOVE ZVSA1504-MANDT TO
ZTSA1503-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA1503'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA1503 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA1503'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA1503-DEPID TO
ZTSA1503_T-DEPID .
MOVE SY-LANGU TO
ZTSA1503_T-SPRAS .
MOVE ZVSA1504-MANDT TO
ZTSA1503_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA1503_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA1503_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA1503_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA1599........................................*
FORM GET_DATA_ZVSA1599.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA1599 WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA1599 .
ZVSA1599-MANDT =
ZTSA1599-MANDT .
ZVSA1599-LIFNR =
ZTSA1599-LIFNR .
ZVSA1599-LAND1 =
ZTSA1599-LAND1 .
ZVSA1599-NAME1 =
ZTSA1599-NAME1 .
ZVSA1599-NAME2 =
ZTSA1599-NAME2 .
ZVSA1599-VENCA =
ZTSA1599-VENCA .
ZVSA1599-CARRID =
ZTSA1599-CARRID .
ZVSA1599-MEALNUMBER =
ZTSA1599-MEALNUMBER .
ZVSA1599-PRICE =
ZTSA1599-PRICE .
ZVSA1599-WAERS =
ZTSA1599-WAERS .
<VIM_TOTAL_STRUC> = ZVSA1599.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA1599 .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA1599.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA1599-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1599 WHERE
  LIFNR = ZVSA1599-LIFNR .
    IF SY-SUBRC = 0.
    DELETE ZTSA1599 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA1599 WHERE
  LIFNR = ZVSA1599-LIFNR .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA1599.
    ENDIF.
ZTSA1599-MANDT =
ZVSA1599-MANDT .
ZTSA1599-LIFNR =
ZVSA1599-LIFNR .
ZTSA1599-LAND1 =
ZVSA1599-LAND1 .
ZTSA1599-NAME1 =
ZVSA1599-NAME1 .
ZTSA1599-NAME2 =
ZVSA1599-NAME2 .
ZTSA1599-VENCA =
ZVSA1599-VENCA .
ZTSA1599-CARRID =
ZVSA1599-CARRID .
ZTSA1599-MEALNUMBER =
ZVSA1599-MEALNUMBER .
ZTSA1599-PRICE =
ZVSA1599-PRICE .
ZTSA1599-WAERS =
ZVSA1599-WAERS .
    IF SY-SUBRC = 0.
    UPDATE ZTSA1599 ##WARN_OK.
    ELSE.
    INSERT ZTSA1599 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA1599-UPD_FLAG,
STATUS_ZVSA1599-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA1599.
  SELECT SINGLE * FROM ZTSA1599 WHERE
LIFNR = ZVSA1599-LIFNR .
ZVSA1599-MANDT =
ZTSA1599-MANDT .
ZVSA1599-LIFNR =
ZTSA1599-LIFNR .
ZVSA1599-LAND1 =
ZTSA1599-LAND1 .
ZVSA1599-NAME1 =
ZTSA1599-NAME1 .
ZVSA1599-NAME2 =
ZTSA1599-NAME2 .
ZVSA1599-VENCA =
ZTSA1599-VENCA .
ZVSA1599-CARRID =
ZTSA1599-CARRID .
ZVSA1599-MEALNUMBER =
ZTSA1599-MEALNUMBER .
ZVSA1599-PRICE =
ZTSA1599-PRICE .
ZVSA1599-WAERS =
ZTSA1599-WAERS .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA1599 USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA1599-LIFNR TO
ZTSA1599-LIFNR .
MOVE ZVSA1599-MANDT TO
ZTSA1599-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA1599'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA1599 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA1599'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZVSA15PRO.......................................*
FORM GET_DATA_ZVSA15PRO.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZTSA15PRO WHERE
(VIM_WHERETAB) .
    CLEAR ZVSA15PRO .
ZVSA15PRO-MANDT =
ZTSA15PRO-MANDT .
ZVSA15PRO-PROID =
ZTSA15PRO-PROID .
ZVSA15PRO-PROKD =
ZTSA15PRO-PROKD .
ZVSA15PRO-PRONAME =
ZTSA15PRO-PRONAME .
ZVSA15PRO-PERNR =
ZTSA15PRO-PERNR .
    SELECT SINGLE * FROM ZTSA15PRO_T WHERE
PROID = ZTSA15PRO-PROID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA15PRO-DTEXT =
ZTSA15PRO_T-DTEXT .
    ENDIF.
<VIM_TOTAL_STRUC> = ZVSA15PRO.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZVSA15PRO .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZVSA15PRO.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZVSA15PRO-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZTSA15PRO WHERE
  PROID = ZVSA15PRO-PROID .
    IF SY-SUBRC = 0.
    DELETE ZTSA15PRO .
    ENDIF.
    DELETE FROM ZTSA15PRO_T WHERE
    PROID = ZTSA15PRO-PROID .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZTSA15PRO WHERE
  PROID = ZVSA15PRO-PROID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZTSA15PRO.
    ENDIF.
ZTSA15PRO-MANDT =
ZVSA15PRO-MANDT .
ZTSA15PRO-PROID =
ZVSA15PRO-PROID .
ZTSA15PRO-PROKD =
ZVSA15PRO-PROKD .
ZTSA15PRO-PRONAME =
ZVSA15PRO-PRONAME .
ZTSA15PRO-PERNR =
ZVSA15PRO-PERNR .
    IF SY-SUBRC = 0.
    UPDATE ZTSA15PRO ##WARN_OK.
    ELSE.
    INSERT ZTSA15PRO .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM ZTSA15PRO_T WHERE
    PROID = ZTSA15PRO-PROID AND
    SPRAS = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR ZTSA15PRO_T.
ZTSA15PRO_T-PROID =
ZTSA15PRO-PROID .
ZTSA15PRO_T-SPRAS =
SY-LANGU .
      ENDIF.
ZTSA15PRO_T-DTEXT =
ZVSA15PRO-DTEXT .
    IF SY-SUBRC = 0.
    UPDATE ZTSA15PRO_T ##WARN_OK.
    ELSE.
    INSERT ZTSA15PRO_T .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZVSA15PRO-UPD_FLAG,
STATUS_ZVSA15PRO-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZVSA15PRO.
  SELECT SINGLE * FROM ZTSA15PRO WHERE
PROID = ZVSA15PRO-PROID .
ZVSA15PRO-MANDT =
ZTSA15PRO-MANDT .
ZVSA15PRO-PROID =
ZTSA15PRO-PROID .
ZVSA15PRO-PROKD =
ZTSA15PRO-PROKD .
ZVSA15PRO-PRONAME =
ZTSA15PRO-PRONAME .
ZVSA15PRO-PERNR =
ZTSA15PRO-PERNR .
    SELECT SINGLE * FROM ZTSA15PRO_T WHERE
PROID = ZTSA15PRO-PROID AND
SPRAS = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZVSA15PRO-DTEXT =
ZTSA15PRO_T-DTEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZVSA15PRO-DTEXT .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZVSA15PRO USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZVSA15PRO-PROID TO
ZTSA15PRO-PROID .
MOVE ZVSA15PRO-MANDT TO
ZTSA15PRO-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA15PRO'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA15PRO TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA15PRO'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE ZTSA15PRO-PROID TO
ZTSA15PRO_T-PROID .
MOVE SY-LANGU TO
ZTSA15PRO_T-SPRAS .
MOVE ZVSA15PRO-MANDT TO
ZTSA15PRO_T-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZTSA15PRO_T'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZTSA15PRO_T TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZTSA15PRO_T'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
